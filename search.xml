<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vercel反代Jsdelivr</title>
      <link href="/posts/14371.html"/>
      <url>/posts/14371.html</url>
      
        <content type="html"><![CDATA[<p>据说<code>Vercel</code>免费用户有<code>100G</code>足够我们用来反代<code>jsdelivr</code>了。</p><p>根据<code>Vercel</code>的<a href="https://vercel.com/docs/concepts/limits/fair-use-policy">合理政策</a>说明流量<code>100G</code>.无服务器函数执行,构建执行等100小时。</p><p>一般我们可以用它托管<code>静态网站</code>，它还支持<code>路由重写</code>功能，因此我们可以实现<code>反代</code>，</p><p>作为<code>CDN</code>使用。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="一、需要一个Vercel账号"><a href="#一、需要一个Vercel账号" class="headerlink" title="一、需要一个Vercel账号"></a>一、需要一个Vercel账号</h3><p><a href="https://vercel.com/">https://vercel.com</a></p><h3 id="二、安装Nodejs"><a href="#二、安装Nodejs" class="headerlink" title="二、安装Nodejs"></a>二、安装Nodejs</h3><p><a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><h3 id="三、安装Vercel-CLI"><a href="#三、安装Vercel-CLI" class="headerlink" title="三、安装Vercel CLI"></a>三、安装Vercel CLI</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g vercel</span><br></pre></td></tr></table></figure><h3 id="四、登录Vercel"><a href="#四、登录Vercel" class="headerlink" title="四、登录Vercel"></a>四、登录Vercel</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel login</span><br></pre></td></tr></table></figure><p> 输入邮箱回车后会发生一封验证邮件，点击邮件中的验证链接，即完成验证，接着回到Vercel CLI的终端，等待终端中提示登录完成。</p><h3 id="五、创建反代配置文件"><a href="#五、创建反代配置文件" class="headerlink" title="五、创建反代配置文件"></a>五、创建反代配置文件</h3><p>在一个合适的位置(最好新建一个文件夹)，新建一个文件，文件名可以随意，我的文件名是<code>jsdelivr.cron.pub.json</code>。</p><p>把一下内容复制进去，根据需求进行替换<code>jsdelivr.cron.pub</code>的域名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;version&quot;: 2,</span><br><span class="line">  &quot;routes&quot;: [</span><br><span class="line">      &#123;&quot;src&quot;: &quot;/(.*)&quot;,&quot;dest&quot;: &quot;https://jsdelivr.cron.pub/$1&quot;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六、上传配置文件"><a href="#六、上传配置文件" class="headerlink" title="六、上传配置文件"></a>六、上传配置文件</h3><p>在终端执行<code>vercel -A jsdelivr.cron.pub.json --prod</code>按照提示输入回车。</p><p>等待一会即可完成，可以去<code>Vercel控制台</code>查看为你分配的二级域名，或者绑定自己的顶级域名。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 基本语法</title>
      <link href="/posts/45085.html"/>
      <url>/posts/45085.html</url>
      
        <content type="html"><![CDATA[<p>Markdown 应用<br>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md 或 .markdown。<br>Markdown 能被使用来撰写电子书，如：Gitbook。</p><p>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge 等。</p><p>Markdown 标题<br>Markdown 标题有两种格式。</p><p>使用 &#x3D; 和 - 标记一级和二级标题</p><p>&#x3D; 和 - 标记语法格式如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>使用 # 号标记</p><p>使用 # 号克表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>Markdown 段落<br>段落<br>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个空格以上加上回车。</p><p>Markdown[空格][空格][回车]<br>Markdown<br>当然也可以在段落后面使用一个空行表示重新开始一个段落</p><p>Markdown<br>[空行]<br>Markdown<br>还可以使用 <br/> 实现强制换行</p><p>显示效果如下所示：</p><p>Markdown<br>Markdown</p><p>字体<br>Markdown 可以使用以下几种字体：</p><p><em>斜体文本</em><br><em>斜体文本</em></p><p><strong>粗体文本</strong><br><strong>粗体文本</strong></p><p><em><strong>斜粗体文本</strong></em><br><em><strong>斜粗体文本</strong></em><br>显示效果如下所示：</p><p>斜体文本<br>斜体文本</p><p>粗体文本<br>粗体文本</p><p>斜粗体文本<br>斜粗体文本</p><p>分隔线<br>可以在一行中使用三个以上的星号 *、减号 -、底线 _ 来建立一个分隔线，行内不能有其他东西，也可以在星号 *、减号 -、底线 _ 中间插入空格。下面每种写法都可以建立分隔线：</p><hr><hr><hr><hr><hr><hr><p>显示效果如下所示：</p><p>删除线<br>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可：</p><p>正常文本<br><del>删除文本</del><br>显示效果如下所示：</p><p>正常文本<br>删除文本</p><p>下划线<br>下划线可以通过 HTML 的 <u> 标签来实现：</p><p><u>下划线文本</u><br>显示效果如下所示：</p><p>下划线文本</p><p>脚注<br>脚注是对文本的补充说明，Markdown 脚注的格式如下：</p><p>[^ 要脚注的文本]<br>Markdown[^ Markdown]  </p><p>[^ Markdown ]：一种轻量级标记语言<br>显示效果如下所示：</p><p>Markdown Markdown。</p><p>Markdown. 一种轻量级标记语言 ↩<br>Markdown 列表<br>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号 *、加号 +、减号 - 作为列表标记，这些标记后面都要添加一个空格，然后再填写内容：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项<br>显示效果如下所示：</li></ul><p>第一项<br>第二项<br>第三项<br>第一项<br>第二项<br>第三项<br>第一项<br>第二项<br>第三项<br>有序列表使用数字并加上 . 号来表示，如：</p><ol><li>第一项</li><li>第二项</li><li>第三项<br>显示效果如下所示：</li></ol><p>第一项<br>第二项<br>第三项<br>列表嵌套只需要在子列表中的选项前面添加四个空格即可：</p><ol><li>第一项：</li></ol><ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul><ol start="2"><li>第二项：</li><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素<br>显示效果如下所示：</li></ol><p>第一项：<br>第一项嵌套的第一个元素<br>第一项嵌套的第二个元素<br>第二项：<br>第二项嵌套的第一个元素<br>第二项嵌套的第二个元素<br>Markdown 区块<br>Markdown 区块引用是在段落开头使用 &gt; 符号，然后后面紧跟一个空格符号：</p><blockquote><p>区块引用<br>显示效果如下所示：</p></blockquote><p>区块引用</p><p>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：</p><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套<br>显示效果如下所示：</p></blockquote></blockquote></blockquote><p>最外层</p><p>第一层嵌套</p><p>第二层嵌套</p><p>区块中使用列表</p><p>区块中使用列表实例如下：</p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项<br>显示效果如下所示：</li></ul></blockquote><p>区块中使用列表</p><p>第一项<br>第二项<br>第一项<br>第二项<br>第三项</p><p>列表中使用区块</p><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><ul><li>第一项<blockquote><p>列表中使用区块</p></blockquote></li><li>第二项<br>显示效果如下所示：</li></ul><p>第一项<br>列表中使用区块</p><p>第二项<br>Markdown 代码<br>如果是段落上的一个函数或片段的代码可以用反引号 &#96; 或用三个反引号 &#96;&#96;&#96; 把它包起来例如：</p><p><code>print</code> 函数<br><code>print</code> 函数<br>显示效果如下所示：</p><p>print 函数<br>print 函数</p><p>代码区块</p><p>代码区块使用 4 个空格或者一个制表符（Tab 键）：</p><p>[空格][空格][空格][空格]print(“Hello”);<br>[Tab]print(“World”);<br>显示效果如下所示：</p><p>print(“Hello”);<br>print(“World”);</p><p>你也可以用 &#96;&#96;&#96; 包裹一段代码，并指定一种语言（也可以不指定）：</p><p>[<code>][javascript] $(document).ready(function () &#123;     alert(&#39;Hello World&#39;); &#125;); [</code>]<br>显示效果如下所示：</p><p>$(document).ready(function () {<br>    alert(‘Hello World’);<br>});<br>Markdown 链接<br>链接语法格式如下：</p><p><a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">链接名称</a><br>或者<br>&lt;链接地址&gt;<br>显示效果如下所示：</p><p>Baidu<br>或者<br><a href="https://www.baidu.com/">https://www.baidu.com/</a></p><p>高级链接</p><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><p>这个链接用 Google 作为网址变量 <a href="http://www.google.com/">Google</a><br>然后在文档的结尾为变量赋值（网址）<br><a href="http://www.google.com/">Google</a>: <a href="http://www.google.com/">http://www.google.com/</a><br>显示效果如下所示：</p><p>这个链接用 Google 作为网址变量 <a href="http://www.google.com/">Google</a><br>然后在文档的结尾为变量赋值（网址）</p><p>Markdown 图片<br>Markdown 图片语法格式如下：</p><p><img src="/%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="alt 属性文本"><br><img src="/%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="alt 属性文本" title="可选标题"><br>开头一个感叹号 !<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 title 属性的文字。<br>使用实例：</p><p><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="图标"><br><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="图标" title="Baidu"><br>显示效果如下所示：</p><p>图标<br>图标</p><p>当然，也可以像网址那样对图片网址使用变量:</p><p>这个链接用 Baidu 作为网址变量 <a href="https://www.baidu.com/img/flexible/logo/pc/result.png">Baidu</a>。<br>然后在文档的结尾为变量赋值（网址）</p><p>显示效果如下所示：</p><p>这个链接用 Baidu 作为网址变量 <a href="https://www.baidu.com/img/flexible/logo/pc/result.png">Baidu</a>。<br>然后在文档的结尾为变量赋值（网址）</p><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</p><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" width="30%">显示效果如下所示：<p>Markdown 表格<br>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>语法格式如下：</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr><tr><td>显示效果如下所示：</td><td></td></tr></tbody></table><p>表头表头<br>单元格单元格<br>单元格单元格</p><p>对齐方式</p><p>我们可以设置表格的对齐方式：</p><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。<br>实例如下：</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">显示效果如下所示：</td><td align="center"></td><td align="right"></td></tr></tbody></table><p>左对齐居中对齐右对齐<br>单元格单元格单元格<br>单元格单元格单元格<br>Markdown 高级技巧<br>支持的 HTML 元素<br>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br> 等 ，如：</p><p>普通文本：使用 Ctrl+Alt+Del 重启电脑<br>HTML 文本：使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑<br>显示效果如下所示：</p><p>普通文本：使用 Ctrl+Alt+Del 重启电脑<br>HTML 文本：使用 Ctrl+Alt+Del 重启电脑</p><p>转义<br>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><p><strong>文本加粗</strong><br>** 正常显示星号 **<br>显示效果如下所示：</p><p>文本加粗<br>** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><p>\   反斜线<br>&#96;   反引号</p><ul><li>星号<br>_   下划线<br>{}  花括号<br>[]  方括号<br>()  小括号</li></ul><h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   感叹号<br>公式<br>当你需要在编辑器中插入数学公式时，可以使用两个美元符号$$包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</li></ul><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 &#x3D;  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$<br>显示效果如下所示：</p><p>流程图<br>横向流程图源码格式：</p><p>[<code>][mermaid] graph LR A[方形] --&gt;B(圆角)     B --&gt; C&#123;条件 a&#125;     C --&gt;|a=1| D[结果 1]     C --&gt;|a=2| E[结果 2]     F[横向流程图] [</code>]<br>显示效果如下所示：</p><p>  graph LR<br>A[方形] –&gt;B(圆角)<br>   B –&gt; C{条件 a}<br>   C –&gt;|a&#x3D;1| D[结果 1]<br>   C –&gt;|a&#x3D;2| E[结果 2]<br>   F[横向流程图]<br>竖向流程图源码格式：</p><p>[<code>][mermaid] graph TD A[方形] --&gt; B(圆角)     B --&gt; C&#123;条件 a&#125;     C --&gt; |a=1| D[结果 1]     C --&gt; |a=2| E[结果 2]     F[竖向流程图] [</code>]<br>显示效果如下所示：</p><p>  graph TD<br>A[方形] –&gt; B(圆角)<br>   B –&gt; C{条件 a}<br>   C –&gt; |a&#x3D;1| D[结果 1]<br>   C –&gt; |a&#x3D;2| E[结果 2]<br>   F[竖向流程图]<br>标准流程图源码格式：</p><p>[<code>][flow] st=&gt;start: 开始框 op=&gt;operation: 处理框 cond=&gt;condition: 判断框(是或否?) sub1=&gt;subroutine: 子流程 io=&gt;inputoutput: 输入输出框 e=&gt;end: 结束框 st-&gt;op-&gt;cond cond(yes)-&gt;io-&gt;e cond(no)-&gt;sub1(right)-&gt;op [</code>]<br>显示效果如下所示：</p><p>标准流程图源码格式（横向）：</p><p>[<code>][flow] st=&gt;start: 开始框 op=&gt;operation: 处理框 cond=&gt;condition: 判断框(是或否?) sub1=&gt;subroutine: 子流程 io=&gt;inputoutput: 输入输出框 e=&gt;end: 结束框 st(right)-&gt;op(right)-&gt;cond cond(yes)-&gt;io(bottom)-&gt;e cond(no)-&gt;sub1(right)-&gt;op [</code>]<br>显示效果如下所示：</p><p>时序图(顺序图)<br>UML 时序图源码样例：</p><p>[<code>][sequence] 对象 A-&gt;对象 B: 对象 B 你好吗?（请求） Note right of 对象 B: 对象 B 的描述 Note left of 对象 A: 对象 A 的描述(提示) 对象 B--&gt;对象 A: 我很好(响应) 对象 A-&gt;对象 B: 你真的好吗？ [</code>]<br>显示效果如下所示：</p><p>UML 时序图源码复杂样例：</p><p>[<code>][sequence] Title: 标题：复杂使用 对象 A-&gt;对象 B: 对象 B 你好吗?（请求） Note right of 对象 B: 对象 B 的描述 Note left of 对象 A: 对象 A 的描述(提示) 对象 B--&gt;对象 A: 我很好(响应) 对象 B-&gt;小三: 你好吗 小三--&gt;&gt;对象 A: 对象 B 找我了 对象 A-&gt;对象 B: 你真的好吗？ Note over 小三, 对象 B: 我们是朋友 participant C Note right of C: 没人陪我玩 [</code>]<br>显示效果如下所示：</p><p>UML 标准时序图样例：</p><p>[<code>][mermaid] %% 时序图例子，-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头   sequenceDiagram     participant 张三     participant 李四     张三-&gt;王五: 王五你好吗？     loop 健康检查         王五-&gt;王五: 与疾病战斗     end     Note right of 王五: 合理 食物 &lt;br/&gt;看医生...     李四--&gt;&gt;张三: 很好!     王五-&gt;李四: 你怎么样?     李四--&gt;王五: 很好! [</code>]<br>显示效果如下所示：</p><p>  %% 时序图例子，-&gt; 直线，–&gt;虚线，-&gt;&gt;实线箭头<br> sequenceDiagram<br>   participant 张三<br>   participant 李四<br>   张三-&gt;王五: 王五你好吗？<br>   loop 健康检查<br>       王五-&gt;王五: 与疾病战斗<br>   end<br>   Note right of 王五: 合理 食物<br>看医生…<br>   李四–&gt;&gt;张三: 很好!<br>   王五-&gt;李四: 你怎么样?<br>   李四–&gt;王五: 很好!<br>甘特图<br>甘特图样例：</p><p>[<code>][mermaid] %% 语法示例   gantt   dateFormat YYYY-MM-DD   title 软件开发甘特图   section 设计     需求: done, des1, 2014-01-06, 2014-01-08     原型: active, des2, 2014-01-09, 3d     UI 设计: des3, after des2, 5d     未来任务: des4, after des3, 5d   section 开发     理解需求: crit, done, 2014-01-06, 24h     设计框架: crit, done, after des2, 2d     开发: crit, active, 3d     未来任务: crit, 5d     玩耍: 2d   section 测试     功能测试: active, a1, after des3, 3d     压力测试: after a1, 20h     测试报告: 48h [</code>]<br>显示效果如下所示：</p><p>mermaid %% 语法示例 gantt dateFormat YYYY-MM-DD title 软件开发甘特图 section 设计 需求: done, des1, 2014-01-06, 2014-01-08 原型: active, des2, 2014-01-09, 3d UI 设计: des3, after des2, 5d 未来任务: des4, after des3, 5d section 开发 理解需求: crit, done, 2014-01-06, 24h 设计框架: crit, done, after des2, 2d 开发: crit, active, 3d 未来任务: crit, 5d 玩耍: 2d section 测试 功能测试: active, a1, after des3, 3d 压力测试: after a1, 20h 测试报告: 48h</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FRP内网穿透</title>
      <link href="/posts/60225.html"/>
      <url>/posts/60225.html</url>
      
        <content type="html"><![CDATA[<p><strong>frp</strong> 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。<br><a href="https://github.com/fatedier/frp/blob/dev/README_zh.md"><strong>项目地址</strong></a>｜<a href="https://gofrp.org/"><strong>文档地址</strong></a></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>在 <a href="https://github.com/fatedier/frp">Github</a> 的 <a href="https://github.com/fatedier/frp/releases">Release</a> 页面中下载到最新版本的客户端和服务端二进制文件，所有文件被打包在一个压缩包中。</p><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>解压缩下载的压缩包，将其中的 frpc 拷贝到内网服务所在的机器上，将 frps 拷贝到具有公网 IP 的机器上，放置在任意目录。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="frps-ini"><a href="#frps-ini" class="headerlink" title="frps.ini"></a>frps.ini</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"># frps的ip地址</span><br><span class="line">server_addr = 0.0.0.0</span><br><span class="line"># frps的端口</span><br><span class="line">server_port = 7000</span><br><span class="line"># 用于kcp协议的udp端口</span><br><span class="line"># kcp_bind_port = 7000</span><br><span class="line"># 认证token</span><br><span class="line">token = 666666</span><br><span class="line"># 日志</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 30</span><br><span class="line">#面板界面</span><br><span class="line">dashboard_addr = 0.0.0.0</span><br><span class="line">dashboard_port = 7500</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br></pre></td></tr></table></figure><h5 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a>frpc.ini</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"># 服务器ip地址</span><br><span class="line">server_addr = 1.1.1.1</span><br><span class="line"># 服务器端口</span><br><span class="line">server_port = 7000</span><br><span class="line"># 认证token</span><br><span class="line">token = 666666</span><br><span class="line"># 日志</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 30</span><br><span class="line"></span><br><span class="line">[DSM-xian]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 5001</span><br><span class="line">remote_port = 5001</span><br><span class="line">[ql]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 5700</span><br><span class="line">remote_port = 5700</span><br><span class="line">[wifi]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 10.1.1.1</span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 5780</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>编写配置文件，先通过 <code>./frps -c ./frps.ini</code> 启动服务端，再通过 <code>./frpc -c ./frpc.ini</code> 启动客户端。如果需要在后台长期运行，建议结合其他工具使用，例如 <code>systemd</code> 和 <code>supervisor</code>。</p><p>如果是 Windows 用户，需要在 cmd 终端中执行命令</p><p>宝塔面板用户可以通过<code>supervisord管理器</code>进行守护。</p><h5 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/路径/frps -c /路径/frps.ini</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
